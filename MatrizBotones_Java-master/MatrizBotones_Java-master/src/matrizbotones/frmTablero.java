package matrizbotones;

import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Javier E. Tello <devjtello@gmail.com>
 */
public class frmTablero extends javax.swing.JFrame {

    //Variables globales del formulario
    int DimensionX = 0;
    int DimensionY = 0;
    int TamX = 0;
    int TamY = 0;
    int L,L1;
    static final int TableroX = 1500;
    static final int TableroY = 1500;
    //Matriz de botones
    JButton[][] MatrizBotones;
    
    /**
     * Creates new form frmTablero
     */
    public frmTablero() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMenu = new javax.swing.JPanel();
        lblDimX = new javax.swing.JLabel();
        tbxDimX = new javax.swing.JTextField();
        lblDimY = new javax.swing.JLabel();
        tbxDimY = new javax.swing.JTextField();
        btnDestruir = new javax.swing.JButton();
        btnCrear = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        pnlTablero = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Matríz Dinamica");
        setName("frmTablero"); // NOI18N
        setPreferredSize(null);
        setResizable(false);
        setSize(new java.awt.Dimension(500, 500));

        lblDimX.setText("Elementos en X:");

        tbxDimX.setPreferredSize(new java.awt.Dimension(50, 24));
        tbxDimX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxDimXActionPerformed(evt);
            }
        });

        lblDimY.setText("Elementos en Y:");

        tbxDimY.setPreferredSize(new java.awt.Dimension(50, 24));
        tbxDimY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbxDimYActionPerformed(evt);
            }
        });

        btnDestruir.setText("Destruir");
        btnDestruir.setToolTipText("");
        btnDestruir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDestruirActionPerformed(evt);
            }
        });

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMenuLayout.createSequentialGroup()
                .addComponent(lblDimX)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbxDimX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblDimY)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbxDimY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCrear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDestruir)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMenuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblDimX)
                        .addComponent(tbxDimX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDimY)
                        .addComponent(tbxDimY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCrear)
                        .addComponent(btnDestruir))))
        );

        pnlTablero.setBackground(new java.awt.Color(204, 204, 204));
        pnlTablero.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlTablero.setToolTipText("");

        javax.swing.GroupLayout pnlTableroLayout = new javax.swing.GroupLayout(pnlTablero);
        pnlTablero.setLayout(pnlTableroLayout);
        pnlTableroLayout.setHorizontalGroup(
            pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );
        pnlTableroLayout.setVerticalGroup(
            pnlTableroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(pnlMenu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTablero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbxDimYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxDimYActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbxDimYActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        //Se verifica que las entradas sean validas
        if(ValidarDimensiones())
        {
            //Se settea el tamaño de la matriz de botones
            MatrizBotones = new JButton[DimensionX][DimensionY];
            //Se settea el tamaño de gridLayout de nuestro panel del tablero
            pnlTablero.setLayout(new GridLayout(DimensionX,DimensionY));
            //Se obtiene el tamaño de los botones acorde a su cantidad
            ObtenerTamanioObjetos(DimensionX,DimensionY);
            //Se declaran los contadores a utilizar
            int contadorX, contadorY;
            //Se recorre la dimension X desde 0 hasta DimensionX
            Random r = new Random();
            int L1C1 , L1C2, L2C1, L2C2 = 0;
            int H1C1,H1C2, H2C1, H2C2, H3C1,H3C2, H4C1, H4C2= 0 ;
            
   L1C1 =  r.nextInt(10)+0;
   System.out.println("Leon1  c1: "+L1C1);
   L1C2 =   r.nextInt(10)+1;
      System.out.println("Leon1 YELLOW c2: "+L1C2);
   L2C1 =r.nextInt(10)+2;
      System.out.println("Leon2 c1: "+L2C1);
   L2C2 = r.nextInt(10)+3;
      System.out.println("Leon2 ORANGE c2: "+L2C2);
   H1C1 = r.nextInt(10)+0;
         System.out.println("HIENA1 c1: "+H1C1);
   H1C2 = r.nextInt(10)+1;
            System.out.println("HIENA1 RED c2 : "+H1C2);
   H2C1 = r.nextInt(10)+2;
            System.out.println("HIENA2 c1: "+H2C1);
   H2C2 = r.nextInt(10)+3;
            System.out.println("HIENA2 black c2: "+H2C2);
   H3C1 = r.nextInt(10)+4;
            System.out.println("HIENA3 c1: "+H3C1);
   H3C2 = r.nextInt(10)+5;
            System.out.println("HIENA3 pink c2: "+H3C2);
   H4C1 =  r.nextInt(10)+6;
            System.out.println("HIENA4 c1: "+H4C1);
   H4C2 =  r.nextInt(10)+3;
            System.out.println("HIENA4 blue c2: "+H4C2);



            for (contadorX = 0; contadorX < DimensionX; contadorX++)
            {
                //Se recorre la dimension Y desde 0 hasta DimensionY
                for (contadorY = 0; contadorY < DimensionY; contadorY++)
                {
                    //Se crea un nuevo objeto de tipo JButton
                    JButton btnNuevo = new JButton();
                    //Se le asignan sus dimensiones (ancho, alto)
                    btnNuevo.setSize(TamX, TamY);
                    btnNuevo.setBackground(Color.WHITE);
                   
                   // if(contadorX == leon2 && contadorY==leon1+ 8){
                   if(contadorX == L1C1 && contadorY == L1C2){
                        btnNuevo.setBackground(Color.yellow);
                       
                    }
                    if(contadorX == L2C1 && contadorY==L2C2 ){
                        btnNuevo.setBackground(Color.ORANGE);
                    }
                    if(contadorX == H1C1 && contadorY==H1C2 ){ 
                        btnNuevo.setBackground(Color.red);
                           if(/*ABAJO*/(L1C1+1 == H1C1 && L1C2 == H1C2 ) || (L2C1+1 == H1C1 && L2C2 ==  H1C2)||
                           /*ARRIBA*/ (L1C1-1 == H1C1 && L1C2 == H1C2) ||  (L2C1-1 == H1C1 && L2C2 == H1C2) ||
                           /*IZQ*/ (L1C1 == H1C1 && L1C2-1 == H1C2) || (L2C1 == H1C1 && L2C2-1 == H1C2 ) ||
                           /*DER*/ (L1C1 == H1C1 && L1C2+1 == H1C2) || (L2C1 == H1C1 && L2C2+1 == H1C2) ||
                       /*IZQ ARRIBA*/ (L1C1-1 == H1C1 && L1C2-1 == H1C2) || (L2C1-1 == H1C1 && L2C2-1 == H1C2) ||
                         /*DER ARRIBA*/ (L1C1-1 == H1C1 && L1C2+1 == H1C2) || (L2C1-1 == H1C1 && L2C2+1 == H1C2) ||
                         /*DER ABAJO*/ (L1C1+1 == H1C1 && L1C2+1 == H1C2) || (L2C1+1 == H1C1 && L2C2+1 == H1C2) ||
                           /*IZQ ABAJO*/ (L1C1+1 == H1C1 && L1C2-1 == H1C2)  || (L2C1+1 == H1C1 && L2C2-1 == H1C2)
                           )
                        {
                            JOptionPane.showMessageDialog(this, "muerto");
                           btnNuevo.setBackground(Color.CYAN);
                        }
                      
                    }
                     if(contadorX == H2C1 && contadorY==H2C2 ){ 
                        btnNuevo.setBackground(Color.RED);
                          if(/*ABAJO*/(L1C1+1 == H2C1 && L1C2 == H2C2 ) || (L2C1+1 == H2C1 && L2C2 ==  H2C2)||
                           /*ARRIBA*/ (L1C1-1 == H2C1 && L1C2 == H2C2) ||  (L2C1-1 == H2C1 && L2C2 == H2C2) ||
                           /*IZQ*/ (L1C1 == H2C1 && L1C2-1 == H2C2) || (L2C1 == H2C1 && L2C2-1 == H2C2 ) ||
                           /*DER*/ (L1C1 == H2C1 && L1C2+1 == H2C2) || (L2C1 == H2C1 && L2C2+1 == H2C2) ||
                       /*IZQ ARRIBA*/ (L1C1-1 == H2C1 && L1C2-1 == H2C2) || (L2C1-1 == H2C1 && L2C2-1 == H2C2) ||
                         /*DER ARRIBA*/ (L1C1-1 == H2C1 && L1C2+1 == H2C2) || (L2C1-1 == H2C1 && L2C2+1 == H2C2) ||
                         /*DER ABAJO*/ (L1C1+1 == H2C1 && L1C2+1 == H2C2) || (L2C1+1 == H2C1 && L2C2+1 == H2C2) ||
                           /*IZQ ABAJO*/ (L1C1+1 == H2C1 && L1C2-1 == H2C2)  || (L2C1+1 == H2C1 && L2C2-1 == H2C2)
                           )
                        {
                            JOptionPane.showMessageDialog(this, "muerto");
                           btnNuevo.setBackground(Color.CYAN);
                        }
                    }
                      if(contadorX == H3C1 && contadorY==H3C2){
                        btnNuevo.setBackground(Color.RED);
                         if(/*ABAJO*/(L1C1+1 == H3C1 && L1C2 == H3C2 ) || (L2C1+1 == H3C1 && L2C2 ==  H3C2)||
                           /*ARRIBA*/ (L1C1-1 == H3C1 && L1C2 == H3C2) ||  (L2C1-1 == H3C1 && L2C2 == H3C2) ||
                           /*IZQ*/ (L1C1 == H3C1 && L1C2-1 == H3C2) || (L2C1 == H3C1 && L2C2-1 == H3C2 ) ||
                           /*DER*/ (L1C1 == H3C1 && L1C2+1 == H3C2) || (L2C1 == H3C1 && L2C2+1 == H3C2) ||
                       /*IZQ ARRIBA*/ (L1C1-1 == H3C1 && L1C2-1 == H3C2) || (L2C1-1 == H3C1 && L2C2-1 == H3C2) ||
                         /*DER ARRIBA*/ (L1C1-1 == H3C1 && L1C2+1 == H3C2) || (L2C1-1 == H3C1 && L2C2+1 == H3C2) ||
                         /*DER ABAJO*/ (L1C1+1 == H3C1 && L1C2+1 == H3C2) || (L2C1+1 == H3C1 && L2C2+1 == H3C2) ||
                           /*IZQ ABAJO*/ (L1C1+1 == H3C1 && L1C2-1 == H3C2)  || (L2C1+1 == H3C1 && L2C2-1 == H3C2)
                           )
                        {
                            JOptionPane.showMessageDialog(this, "muerto");
                           btnNuevo.setBackground(Color.CYAN);
                           
                        }
                    }
                     
                      if(contadorX == H4C1 && contadorY==H4C2 ){
                        btnNuevo.setBackground(Color.RED);
                          if(/*ABAJO*/(L1C1+1 == H4C1 && L1C2 == H4C2 ) || (L2C1+1 == H4C1 && L2C2 ==  H4C2)||
                           /*ARRIBA*/ (L1C1-1 == H4C1 && L1C2 == H4C2) ||  (L2C1-1 == H4C1 && L2C2 == H4C2) ||
                           /*IZQ*/ (L1C1 == H4C1 && L1C2-1 == H4C2) || (L2C1 == H4C1 && L2C2-1 == H4C2 ) ||
                           /*DER*/ (L1C1 == H4C1 && L1C2+1 == H4C2) || (L2C1 == H4C1 && L2C2+1 == H4C2) ||
                       /*IZQ ARRIBA*/ (L1C1-1 == H4C1 && L1C2-1 == H4C2) || (L2C1-1 == H4C1 && L2C2-1 == H4C2) ||
                         /*DER ARRIBA*/ (L1C1-1 == H4C1 && L1C2+1 == H4C2) || (L2C1-1 == H4C1 && L2C2+1 == H4C2) ||
                         /*DER ABAJO*/ (L1C1+1 == H4C1 && L1C2+1 == H4C2) || (L2C1+1 == H4C1 && L2C2+1 == H4C2) ||
                           /*IZQ ABAJO*/ (L1C1+1 == H4C1 && L1C2-1 == H4C2)  || (L2C1+1 == H4C1 && L2C2-1 == H4C2)
                           )
                        {
                            JOptionPane.showMessageDialog(this, "muerto");
                           btnNuevo.setBackground(Color.GREEN);
                           
                        }
                    }
                       
                   //    if(contadorX == hiena4 && contadorY==leon1 ){
                     //    if(leon2+1 == hiena4 && leon1 == leon1)
                             
                      //  btnNuevo.setBackground(Color.green);
                         
                    //}
                       
                      
                      
                    
                    //Se asigna un texto con la posición del botón en la matriz al botón, al tooltip del botón
                    btnNuevo.setToolTipText(Integer.toString(contadorX) + "," + Integer.toString(contadorY));
                    //Se agrega a la matriz el botón recien creado
                    MatrizBotones[contadorX][contadorY] = btnNuevo;
                    //Se agrega un nuevo evento que maneje la acción clic sobre el botón creado
                    MatrizBotones[contadorX][contadorY].addActionListener(new ActionListener() 
                    { 
                        public void actionPerformed(ActionEvent e) { 
                            Click(btnNuevo);
                        } 
                    });
                    //Se agrega al panel 
                    pnlTablero.add(MatrizBotones[contadorX][contadorY]);
                    //Se redibuja el panel
                    RedibujarTablero();
                }//Fin For - Y
            }//Fin For - X
           
        }//Fin If - ValidaDimensiones
        else
        {
            JOptionPane.showMessageDialog(this, "Las Dimensiones a ingresar deben ser númericas y en un rango de entre 1 y 100");
        }//Fin if - ValidaDimensiones - false
    }//GEN-LAST:event_btnCrearActionPerformed

    /**
     * Metodo que redibuja el elemto pnlTablero
     */
    private void RedibujarTablero()
    {
        //Se valida los componentes del elemento pnlTablero
        pnlTablero.validate();
        //Se redibuja el elemento pnlTablero y sus componentes hijos
        pnlTablero.repaint();
    }
    
    private void btnDestruirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDestruirActionPerformed
        //Se valida que hayan elementos en el panel
        if (HayElementos())
        {
            //Se recorre la matriz de botones y se elimina cada elemento de la matríz
            for (int x = 0; x < DimensionX; x++)
            {
                for (int y = 0; y < DimensionX; y++)
                {
                    MatrizBotones[x][y] = null;
                }//Fin For - y
            }//Fin For - x
            //Se remueven todos los elementos hijos del JPanel pnlTablero
            pnlTablero.removeAll();
            //Se redibuja el panel
            RedibujarTablero();
        }//Fin if HayElementos
        
    }//GEN-LAST:event_btnDestruirActionPerformed

    private void tbxDimXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbxDimXActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbxDimXActionPerformed
    
    /**
     * Función que verifica si hay elementos creados en el pnlTablero
     */
    private boolean HayElementos()
    {
        //Si hay elementos en el panel retorna true, caso contrario retorna false
        return pnlTablero.getComponentCount()>0;
    }
    
    /**
     * Metodo personalizado que sirve para manejar el evento Click de cada uno de los botones de la matriz
     */
    private void Click(JButton btn)
    {
       
        
                        
                    
        JOptionPane.showMessageDialog(this, "Soy un boton el la posicion : " + btn.getToolTipText());
        
        
    }

    /**
     * Función que verifica si el valor String es de tipo númerico
     */
    boolean esNumerico(String valorString)
    {
        try
        {
            Integer.parseInt(valorString);
        }
        catch(NumberFormatException ex)
        {
            return false;
        }
        return true;
    }
    
    /**
     * Función que valida que las dimensiones ingresadas por el usuario sean validas y entre los rangos de 1 a 100
    */
    private boolean ValidarDimensiones()
    {
        //definición inicial de variable de retorno
        boolean valido = false;
        //Se obtienen las entradas de texto de las dimensiones ingresadas
        if (esNumerico(tbxDimX.getText()))
        {
            if (esNumerico(tbxDimY.getText()))
            {
                //Se obtiene el tamaño en X (ancho) que debe tener el boton
                DimensionX = Integer.parseInt(tbxDimX.getText());
                //Se obtiene el tamaño en Y (alto) que debe tener el boton
                DimensionY = Integer.parseInt(tbxDimY.getText());
                //Se verifican que las dimensiones ingresadas por el usuario esten entre 1 y 100
                if (((DimensionX < 101) && (DimensionY < 101)) && ((DimensionX > 0) && (DimensionY > 0)))
                {
                    return true;
                }
            }
        }
        return valido;
    }
    
    /**
     * Metodo que calcula el tamaño de ancho y alto de los botones acorde a la cantidad de elementos en la matriz
     */
    private void ObtenerTamanioObjetos(int cantX, int cantY)
    {
        TamX = TableroX/cantX;
        TamY = TableroY/cantY;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmTablero.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmTablero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnDestruir;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDimX;
    private javax.swing.JLabel lblDimY;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JPanel pnlTablero;
    private javax.swing.JTextField tbxDimX;
    private javax.swing.JTextField tbxDimY;
    // End of variables declaration//GEN-END:variables
}
